// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Matches snapshot 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "white",
        "height": 100,
        "paddingBottom": 0,
        "paddingLeft": 30,
        "paddingRight": 30,
        "paddingTop": 20,
      },
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#ffffff",
        "borderColor": "#828282",
        "borderRadius": 10,
        "borderStyle": "solid",
        "borderWidth": 1,
        "elevation": 0,
        "flexDirection": "row",
        "height": 37,
      }
    }
  >
    <View
      accessibilityLabel="search"
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": undefined,
        }
      }
      accessible={true}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 6,
          "left": 6,
          "right": 6,
          "top": 6,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Array [
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "margin": 6,
              "overflow": "hidden",
            },
            Object {
              "borderRadius": 18,
              "height": 36,
              "width": 36,
            },
            undefined,
            undefined,
          ],
        ]
      }
    >
      <View>
        <Text
          accessibilityElementsHidden={true}
          allowFontScaling={false}
          importantForAccessibility="no-hide-descendants"
          pointerEvents="none"
          style={
            Array [
              Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontSize": 24,
              },
              Array [
                Object {
                  "transform": Array [
                    Object {
                      "scaleX": 1,
                    },
                  ],
                },
                Object {
                  "backgroundColor": "transparent",
                },
              ],
              Object {
                "fontFamily": "material-community",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
    </View>
    <TextInput
      accessibilityRole="search"
      accessibilityTraits="search"
      allowFontScaling={true}
      keyboardAppearance="light"
      onChangeText={[Function]}
      placeholder=""
      placeholderTextColor="rgba(0, 0, 0, 0.54)"
      rejectResponderTermination={true}
      returnKeyType="search"
      selectionColor="#6200ee"
      style={
        Array [
          Object {
            "alignSelf": "stretch",
            "flex": 1,
            "fontSize": 18,
            "minWidth": 0,
            "paddingLeft": 8,
            "textAlign": "left",
          },
          Object {
            "color": "#000000",
            "fontFamily": "System",
            "fontWeight": "400",
          },
          Object {
            "fontFamily": "bcsans",
          },
        ]
      }
      underlineColorAndroid="transparent"
    />
    <View
      accessibilityLabel="clear"
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": true,
        }
      }
      accessible={true}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 6,
          "left": 6,
          "right": 6,
          "top": 6,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Array [
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "margin": 6,
              "overflow": "hidden",
            },
            Object {
              "borderRadius": 18,
              "height": 36,
              "width": 36,
            },
            Object {
              "opacity": 0.32,
            },
            undefined,
          ],
        ]
      }
    >
      <View>
        <Text
          accessibilityElementsHidden={true}
          allowFontScaling={false}
          importantForAccessibility="no-hide-descendants"
          pointerEvents="none"
          style={
            Array [
              Object {
                "color": "rgba(255, 255, 255, 0)",
                "fontSize": 24,
              },
              Array [
                Object {
                  "transform": Array [
                    Object {
                      "scaleX": 1,
                    },
                  ],
                },
                Object {
                  "backgroundColor": "transparent",
                },
              ],
              Object {
                "fontFamily": "material-community",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexBasis": 0,
          "flexDirection": "row",
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "flex-end",
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#000000",
            "fontFamily": "System",
            "fontWeight": "400",
            "textAlign": "left",
          },
          Array [
            Object {
              "color": "#828282",
              "marginRight": "auto",
            },
          ],
        ]
      }
    >
      4 matching parks
    </Text>
    <Text
      style={
        Array [
          Object {
            "color": "#000000",
            "fontFamily": "System",
            "fontWeight": "400",
            "textAlign": "left",
          },
          Array [
            Object {
              "fontSize": 16,
              "opacity": 0.6,
            },
          ],
        ]
      }
    >
      Filter
    </Text>
    <View
      accessibilityLabel="Filter Parks"
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": undefined,
        }
      }
      accessible={true}
      focusable={false}
      hitSlop={
        Object {
          "bottom": 6,
          "left": 6,
          "right": 6,
          "top": 6,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Array [
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "margin": 6,
              "overflow": "hidden",
            },
            Object {
              "borderRadius": 13.5,
              "height": 27,
              "width": 27,
            },
            undefined,
            Array [
              Object {
                "marginRight": -4,
                "opacity": 0.6,
              },
            ],
          ],
        ]
      }
    >
      <View>
        <Text
          accessibilityElementsHidden={true}
          allowFontScaling={false}
          importantForAccessibility="no-hide-descendants"
          pointerEvents="none"
          style={
            Array [
              Object {
                "color": "#000000",
                "fontSize": 18,
              },
              Array [
                Object {
                  "transform": Array [
                    Object {
                      "scaleX": 1,
                    },
                  ],
                },
                Object {
                  "backgroundColor": "transparent",
                },
              ],
              Object {
                "fontFamily": "material-community",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
</View>
`;
